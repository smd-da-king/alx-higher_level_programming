The matrix_dvided function
======================

Using matrix_dvided
-------------------

Import the function:
	  >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check function's docstring:
          >>> doc = __import__("2-matrix_divided").matrix_divided.__doc__
	  >>> len(doc) > 1
	  True

case 1 (string case):
	  >>> matrix_divided("matrix", 6)
    	  Traceback (most recent call last):
	  ...
	  TypeError: matrix must be a matrix (list of lists) of integers/floats

case 2 (normal case):
       	  >>> matrix_divided([[1,2,3],[4,5,6]], 3)
	  [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

case 3 (one element):
       	  >>> matrix_divided([[2]], 2)
	  [[1.0]]

case 4 (div = 0):
          >>> matrix_divided([[2,2],[2,2]], 0)
	  Traceback (most recent call last):
	  ...
	  ZeroDivisionError: division by zero

case 4 (div not a number):
       	  >>> matrix_divided([[2,2],[2,2]], "hi")
	  Traceback (most recent call last):
	  ...
	  TypeError: div must be a number

case 5 (list of lists of lists):
          >>> matrix_divided([[[2,2],2],[2,2]], 150)
          Traceback (most recent call last):
          ...
          TypeError: matrix must be a matrix (list of lists) of integers/floats


case 5 (empty matrix):
          >>> matrix_divided([[]], 15)
	  [[]]

case 6 (rows diffrent length):
          >>> matrix_divided([[2,3,4], [1,2]], 15)
	  Traceback (most recent call last):
	  ...
	  TypeError: Each row of the matrix must have the same size
